---
title: "Illusion Sensitivity and Phenomenological Control"
subtitle: "Preprocessing"
date: "`r Sys.Date()`"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: false
    toc: true
execute: 
  cache: false
---

# Data Preparation

```{r}
#| message: false
#| warning: false

library(tidyverse)
library(ggdist)
library(ggside)
library(easystats)
library(patchwork)

data_ppt <- read.csv("../data/rawdata_participants.csv")

data_ig <- read.csv("../data/rawdata_illusion.csv") |>
    mutate(
        Illusion_Effect = ifelse(sign(Illusion_Strength) > 0, "Incongruent", "Congruent"),
        Task_Difficulty = abs(Illusion_Difference),
        Condition_Illusion = case_when(
            Illusion_Effect == "Congruent" ~ "Congruent",
            Illusion_Effect == "Incongruent" & Illusion_Strength <= median(Illusion_Strength[Illusion_Effect == "Incongruent"], na.rm = TRUE) ~ "Mild",
            Illusion_Effect == "Incongruent" & Illusion_Strength > median(Illusion_Strength[Illusion_Effect == "Incongruent"], na.rm = TRUE) ~ "Strong"
        ),
        Condition_Difficulty = datawizard::categorize(
            Task_Difficulty,
            split = "quantile",
            n_groups = 2,
            labels = c("Hard", "Easy")
        ),
        .by = "Illusion_Type"
    )
```

The initial sample consisted of `r report::report_participants(data_ppt, age="Age", gender="Gender", education="Education")`, for a total trial number of `r nrow(data_ppt)`.


## Experiment Duration

The experiment's median duration is `r insight::format_value(median(data_ppt$Experiment_Duration))` min (`r insight::format_ci(bayestestR::hdi(data_ppt$Experiment_Duration, ci=0.5))`).

```{r}
data_ppt |>
    mutate(
        Participant = fct_reorder(Participant, Experiment_Duration),
        Category = ifelse(Experiment_Duration > 50, "extra", "ok"),
        Duration = ifelse(Experiment_Duration > 50, 50, Experiment_Duration)
    ) |>
    ggplot(aes(y = Participant, x = Duration)) +
    geom_point(aes(color = Category, shape = Category)) +
    geom_vline(xintercept = median(data_ppt$Experiment_Duration), color = "red", linetype = "dashed") +
    scale_shape_manual(values = c("extra" = 3, ok = 19)) +
    scale_color_manual(values = c("extra" = "red", ok = "black")) +
    guides(color = "none", shape = "none") +
    ggside::geom_xsidedensity(fill = "grey", color = NA) +
    ggside::scale_xsidey_continuous(expand = c(0, 0)) +
    labs(
        title = "Experiment Completion Time",
        x = "Duration (in minutes)",
        y = "Participants"
    ) +
    see::theme_modern() +
    ggside::theme_ggside_void() +
    theme(
        ggside.panel.scale = .3,
        axis.text.y = element_blank()
    )
```


## Personality Questionnaires Computation

### IPIP6


```{r}
ipip6 <- select(data_ppt, starts_with("ipip_"))
ipip6[grepl("_R", names(ipip6))] <- 8 - ipip6[grepl("_R", names(ipip6))]

data_ppt$IPIP6_Extraversion <- rowMeans(ipip6[grepl("Ext", names(ipip6))])
data_ppt$IPIP6_Conscientiousness <- rowMeans(ipip6[grepl("Cons", names(ipip6))])
data_ppt$IPIP6_Neuroticism <- rowMeans(ipip6[grepl("Neuro", names(ipip6))])
data_ppt$IPIP6_Openness <- rowMeans(ipip6[grepl("Open", names(ipip6))])
data_ppt$IPIP6_HonestyHumility <- rowMeans(ipip6[grepl("HonHum", names(ipip6))])
data_ppt$IPIP6_Agreeableness <- rowMeans(ipip6[grepl("Agr", names(ipip6))])
```

### PID-5

```{r}
pid5 <- select(data_ppt, starts_with("pid_"))

data_ppt$PID5_Disinhibition <- rowMeans(pid5[grepl("Dis", names(pid5))])
data_ppt$PID5_Detachment <- rowMeans(pid5[grepl("Det", names(pid5))])
data_ppt$PID5_NegativeAffect <- rowMeans(pid5[grepl("NegAff", names(pid5))])
data_ppt$PID5_Antagonism <- rowMeans(pid5[grepl("Ant", names(pid5))])
data_ppt$PID5_Psychoticism <- rowMeans(pid5[grepl("Psy", names(pid5))])
```


# Exclusion

## Illusion Game Participants

We removed participants with an error rate > 45% (suggesting chance-level, i.e., random, responding) for any of the illusion types. Outliers detected in the first block will be discarded entirely (suggesting that they did not properly do the task), but if only the second set is bad, then only the second set will be discarded (suggesting that they got "bored" when having to re-do the task), as the illusion sensitivity can still be estimated, albeit with less precision. Additionally, participants whose RTs are significantly slower than the group average (possibly indicative of a different strategy) were also excluded from the analysis (RT > 4 SD above the mean).

```{r}
#| message: false

data_outliers <- data_ig |>
    summarize(
        p_Error = sum(Error) / n(),
        z_RT = mean(RT),
        .by = c("Participant", "Illusion_Type", "Block")
    ) |>
    mutate(z_RT = as.numeric(standardize(z_RT)), .by = c("Illusion_Type", "Block")) |>
    arrange(desc(p_Error))

outliers <- filter(data_outliers, p_Error > 0.45 | z_RT > 4)
outliers_full <- unique(filter(outliers, Block == "A")$Participant)
outliers_half <- unique(filter(outliers, Block == "B")$Participant)
outliers_half <- outliers_half[!(outliers_half %in% outliers_full)]

p1 <- data_outliers |>
    ggplot(aes(x = p_Error)) +
    geom_density(aes(color = Illusion_Type)) +
    geom_vline(xintercept = 0.45, linetype = "dashed", color = "red")

p2 <- data_outliers |>
    ggplot(aes(x = z_RT)) +
    geom_density(aes(color = Illusion_Type)) +
    geom_vline(xintercept = 4, linetype = "dashed", color = "red")

p1 / p2
```

We discarded `r length(outliers_full)` participants (entirely) and `r length(outliers_half)` participant's second blocks based on error rate.

```{r}
# data_ig <- data_ig |>
#   filter(!Participant %in% outliers) |>
#   filter(!((Block == "B") & (Participant %in% outliers_half)))
```


## Illusion Game Trials

We removed individual extreme trials (RT < 0.2 s or > 5 s; Th√©riault et al., 2024) to mitigate the risk of confounding effects driven by extreme speed or accuracy strategies.

```{r}
data_ig <- filter(data_ig, RT > 0.2 & RT < 5)
```


## PCS

```{r}
outliers_pcs1 <- data_ppt[data_ppt$pcs_hello != "Hello", "Participant"]
outliers_pcs2 <- data_ppt[data_ppt$pcs_noballs == TRUE, "Participant"]
outliers_pcs3 <- data_ppt[data_ppt$pcs_press < 5, "Participant"]
outliers_pcs <- unique(c(outliers_pcs1, outliers_pcs2, outliers_pcs3))
```

We removed `r length(outliers_pcs)` (`r insight::format_percent(length(outliers_pcs) / nrow(data_ppt))`) participants that either did not reported hearing "Hello" at the beginning of the experiment, responded that no balls were presented in the screen, or pressed less than 5 times when asked to do so.


```{r}
# data_ppt <- filter(data_ppt, !Participant %in% outliers_pcs)
# data_ig <- filter(data_ig, !Participant %in% outliers_pcs)
```



# Final Sample


The final sample includes `r report::report_participants(data_ppt, age="Age", sex="Sex", education="Education")`.

## Age

```{r}
p_age <- data_ppt |> # To match the binwidth
    ggplot(aes(x = data_ppt)) +
    geom_histogram(aes(x = Age, fill = Gender), bins = 28) +
    geom_vline(xintercept = mean(data_ppt$Age), color = "red", linewidth = 1.5) +
    scale_fill_manual(values = c("Male" = "#64B5F6", "Female" = "#F06292", "Other" = "orange")) +
    scale_x_continuous(expand = c(0, 0)) +
    scale_y_continuous(expand = c(0, 0)) +
    labs(title = "Age", y = "Number of Participants", color = NULL, subtitle = "Distribution of participants' age") +
    theme_modern(axis.title.space = 10) +
    theme(
        plot.title = element_text(size = rel(1.2), face = "bold", hjust = 0),
        plot.subtitle = element_text(size = rel(1.2), vjust = 7),
        axis.text.y = element_text(size = rel(1.1)),
        axis.text.x = element_text(size = rel(1.1)),
        axis.title.x = element_blank()
    )
p_age
```

## Education

```{r}
p_edu <- data_ppt |>
    mutate(Education = fct_relevel(Education, "Other", "Elementary school", "High school", "Bachelor", "Master", "Doctorate")) |>
    ggplot(aes(x = Education)) +
    geom_bar(aes(fill = Education)) +
    scale_y_continuous(expand = c(0, 0), breaks = scales::pretty_breaks()) +
    scale_fill_viridis_d(guide = "none") +
    labs(title = "Education", y = "Number of Participants", subtitle = "Participants per achieved education level") +
    theme_modern(axis.title.space = 15) +
    theme(
        plot.title = element_text(size = rel(1.2), face = "bold", hjust = 0),
        plot.subtitle = element_text(size = rel(1.2), vjust = 7),
        axis.text.y = element_text(size = rel(1.1)),
        axis.text.x = element_text(size = rel(1.1)),
        axis.title.x = element_blank()
    )
p_edu
```

## Ethnicity

```{r p_ethnicity}
# ggwaffle::waffle_iron(data_ppt, ggwaffle::aes_d(group = Ethnicity), rows=10) |>
#   ggplot(aes(x, y, fill = group)) +
#   ggwaffle::geom_waffle() +
#   coord_equal() +
#   scale_fill_flat_d() +
#   ggwaffle::theme_waffle() +
#   labs(title = "Self-reported Ethnicity", subtitle = "Each square represents a participant", fill="")  +
#   theme(
#     plot.title = element_text(size = rel(1.2), face = "bold", hjust = 0),
#     plot.subtitle = element_text(size = rel(1.2)),
#     axis.title.x = element_blank(),
#     axis.title.y = element_blank()
#   )
```


# Save

```{r}
#| code-fold: false

write.csv(data_ppt, "../data/data_participants.csv", row.names = FALSE)
write.csv(data_ig, "../data/data_illusion.csv", row.names = FALSE)
```

