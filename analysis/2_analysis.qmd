---
title: "Illusion Sensitivity and Phenomenological Control"
subtitle: "Analysis"
date: "`r Sys.Date()`"
editor: source
editor_options: 
  chunk_output_type: console
format:
  html:
    code-fold: true
    self-contained: false
    toc: true
    warning: false 
    message: false 
execute: 
  cache: false
---

## Data Preparation 

```{r}
library(tidyverse)
library(ggdist)
library(ggside)
library(easystats)
library(patchwork)
library(psych)


# data_ppt <- read.csv("https://raw.githubusercontent.com/RealityBending/IllusionGamePhenomenologicalControl/refs/heads/main/data/rawdata_participants.csv")

data_ppt <- read.csv("../data/data_participants.csv")

data_ig <- read.csv("../data/data_illusion.csv") |>
  mutate(
    Block = as.factor(Block),
    Illusion_Effect = fct_relevel(as.factor(Illusion_Effect), "Incongruent", "Congruent"),
    Response_Correct = as.factor(Response_Correct)
  ) 

```


## Score Computation

### PCS

Mean subjective scale responses for item 4 (Taste) and item 10 (Post-session suggestion) are each generated from the combination of two responses which require processing prior to generating an overall subjective score. 
The subjective score for item 4 is the mean of the responses to the (a)‘sour’ and (b)‘sweet’ sub-scales for the taste suggestion. 
The subjective score for item 10 is the geometric mean (the square root of the product) of he responses to the (a) ‘urge’ and (b) ‘amnesia’ sub-scales for the post-session suggestion. 

```{r}
pcs_items <- c("pcs_handslow", "pcs_mosquito", "pcs_magnetichands", "pcs_armrigidity", "pcs_tastescore", "pcs_postsessionsuggetsion", "pcs_armimmobile", "pcs_music", "pcs_negativehallucination", "pcs_amnesia")

data_ppt$pcs_tastescore <- rowMeans(data_ppt[grepl("taste", names(data_ppt))])
data_ppt$pcs_postsessionsuggetsion <- sqrt(data_ppt$pcs_urgepress * data_ppt$pcs_memorypress)
```



### Illusion Game

```{r}
ig_scores <- data_ig |>
  summarize(ErrorRate = sum(Error) / n(),
            IES = mean(RT[Response_Correct == "true"] / mean(Response_Correct == "true")),
            .by = c("Participant", "Illusion_Type", "Condition_Illusion", "Condition_Difficulty")) |> 
  pivot_wider(names_from = c("Illusion_Type", "Condition_Illusion", "Condition_Difficulty"), 
              values_from = c("ErrorRate", "IES")) 
```

```{r}
corrs <- data.frame()
for(outcome in c("ErrorRate", "IES")) {
  for(ill_type in c("Ebbinghaus", "MullerLyer", "VerticalHorizontal")) {
    for(cond in c("Congruent", "Mild", "Strong")) {
      corrs <- correlation::correlation(
        select(ig_scores, select=paste0(outcome, "_", ill_type, "_", cond, "_Easy")),
        select(ig_scores, select=paste0(outcome, "_", ill_type, "_", cond, "_Hard"))) |> 
        mutate(Outcome = outcome) |> 
        rbind(corrs)
    }
  }
}

# IF correlations > 0.5:
ig_scores <- data_ig |>
  summarize(ErrorRate = sum(Error) / n(),
            IES = mean(RT[Response_Correct == "true"] / mean(Response_Correct == "true")),
            .by = c("Participant", "Illusion_Type", "Condition_Illusion")) |> 
  pivot_wider(names_from = c("Illusion_Type", "Condition_Illusion"), 
              values_from = c("ErrorRate", "IES")) 
```


#### Manipulation Check

Significant differences between the Congruent and Mild and the Mild and Strong groups are taken as evidence that illusions functioned as intended. 

```{r}
ttests <- data.frame()
for(outcome in c("ErrorRate", "IES")) {
  for(ill_type in c("Ebbinghaus", "MullerLyer", "VerticalHorizontal")) {
    for(cond in c("Congruent", "Mild")) {
      # Add loop for Hard and Easy if need be
      x1 <- ig_scores[[paste0(outcome, "_", ill_type, "_", cond)]]
      if(cond == "Congruent") {
        x2 <- ig_scores[[paste0(outcome, "_", ill_type, "_", "Mild")]]
      } else {
        x2 <- ig_scores[[paste0(outcome, "_", ill_type, "_", "Strong")]]
      }
      ttests <- BayesFactor::ttestBF(x = x1, y = x2, paired = TRUE) |> 
        parameters::parameters() |> 
        mutate(
          Outcome = outcome,
          Illusion_Type = ill_type,
          Condition_Illusion = cond
        ) |> 
        rbind(ttests)
    }
  }
}

ttests |> 
  select(Illusion_Type, Condition_Illusion, Outcome, Median, BF) |> 
  arrange(Illusion_Type, Condition_Illusion, Outcome)
```


## Reliability

### PCS


```{r}
data_ppt[, pcs_items] |>
  psych::alpha()

data_ppt$PCS_Score <- rowMeans(data_ppt[, pcs_items], na.rm = TRUE)
```

### Illusion Game

::: {.panel-tabset}

#### Error Rate - Mild 

```{r}
ig_scores |>
  select(matches("ErrorRate_.*_Mild.*")) |>
  psych::alpha()
```

#### Error Rate - Strong 

```{r}
ig_scores |>
  select(matches("ErrorRate_.*_Strong.*")) |>
  psych::alpha()
```

#### IES - Mild

```{r}
ig_scores |>
  select(matches("IES_.*_Mild.*")) |>
  psych::alpha()
```

#### IES - Strong

```{r}
ig_scores |>
  select(matches("IES_.*_Strong.*")) |>
  psych::alpha()
```

:::



## Illusion Sensitivity vs. PCS 


```{r}
features <- merge(ig_scores, data_ppt[c("Participant", "PCS_Score", "PID5_Psychoticism")])

r <- correlation::correlation(
  select(features, -PCS_Score, -PID5_Psychoticism),
  select(features, PCS_Score),
  bayesian = TRUE
)

r |> 
  format_table() |> 
  select(-Prior, -Method, -n_Obs, -pd, -`% in ROPE`) |> 
  gt::gt() 
```

## Illusion Sensitivity vs. Psychoticism 


```{r}
r <- correlation::correlation(
  select(features, -PCS_Score, -PID5_Psychoticism),
  select(features, PID5_Psychoticism),
  bayesian = TRUE
)

r |> 
  format_table() |> 
  select(-Prior, -Method, -n_Obs, -pd, -`% in ROPE`) |> 
  gt::gt()
```
